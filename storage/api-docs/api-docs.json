{
    "openapi": "3.0.0",
    "info": {
        "title": "Project_Alan API documentation example",
        "contact": {
            "email": "aldaberdiev99@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Laravel Swagger API server"
        }
    ],
    "paths": {
        "/actions": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get list of actions",
                "description": "Returns list of actions",
                "operationId": "getActionsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Store new action",
                "description": "Returns action data",
                "operationId": "storeAction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/actions/{id}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get action information",
                "description": "Returns action data",
                "operationId": "getActionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Action id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Actions"
                ],
                "summary": "Update existing action",
                "description": "Returns updated action data",
                "operationId": "updateAction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Action id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Actions"
                ],
                "summary": "Delete action by ID",
                "operationId": "actionsDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of action",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deleted"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/banners": {
            "get": {
                "tags": [
                    "Banners"
                ],
                "summary": "Display all Banners",
                "operationId": "bannersAll",
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BannerShowRequest"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Banner not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Banners"
                ],
                "summary": "Store banner data",
                "description": "Store banner data",
                "operationId": "bannerStore",
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The description of Banner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "The title of Banner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "photos",
                        "in": "query",
                        "description": "The photo of Banner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass banner credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "price",
                                    "title"
                                ],
                                "properties": {
                                    "price": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "About actions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/banners/{id}": {
            "get": {
                "tags": [
                    "Banners"
                ],
                "summary": "Get banner by ID",
                "operationId": "bannersGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of banner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerShowRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Banner not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Banners"
                ],
                "summary": "Update banner by ID",
                "operationId": "bannersUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of banner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BannerShowRequest"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Banners"
                ],
                "summary": "Delete banner by ID",
                "operationId": "bannersDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of banner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Banner not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/banners/{id}/photos": {
            "get": {
                "tags": [
                    "Banners"
                ],
                "summary": "Display all banner photos",
                "operationId": "photosProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of banner",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhotoShowRequest"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photos not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategoriesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Store category data",
                "description": "Store category data",
                "operationId": "categoryStore",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of Category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "The slug of Category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "photo",
                        "in": "query",
                        "description": "The photo of category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "icon",
                        "in": "query",
                        "description": "The icon of category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass action credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "price",
                                    "title"
                                ],
                                "properties": {
                                    "price": {
                                        "type": "integer",
                                        "example": "20"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "About actions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Fill all required fields"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "operationId": "categoriesGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryShowRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category by ID",
                "operationId": "categoriesUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryShowRequest"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category by ID",
                "operationId": "categoriesDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of action",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/categories/{id}/products": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Display all category products",
                "operationId": "categoriesProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of action",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Everything is fine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductShowRequest"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ActionResource": {
                "title": "ActionResource",
                "description": "Action resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Action"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ActionResource"
                }
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "description": "Category resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CategoryResource"
                }
            },
            "BannerShowRequest": {
                "title": "Banner get example",
                "description": "Some simple example",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Unique ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the banner",
                        "type": "string",
                        "example": "Description of banner"
                    },
                    "title": {
                        "title": "title",
                        "description": "Title of banner",
                        "type": "string",
                        "example": "About banner"
                    },
                    "created_at": {
                        "title": "Created_at",
                        "description": "Created time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    },
                    "updated_at": {
                        "title": "Updated_at",
                        "description": "Updated time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    }
                },
                "type": "object"
            },
            "CategoryShowRequest": {
                "title": "Category get example",
                "description": "Some simple example",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Unique ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "Name of the category",
                        "type": "integer",
                        "example": "Fruits"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Slug for category",
                        "type": "string",
                        "example": "About action"
                    },
                    "photo": {
                        "title": "photo",
                        "description": "Photo of category",
                        "type": "string",
                        "example": "https://www.google.com/search?q=fruits&sxsrf=ALeKk00am-a2RSceVhR9xhnmtlTf6hyi4A:1619097112058&tbm=isch&source=iu&ictx=1&fir=Iqrn9zwUMx_LVM%252CV1GXApsZb-s1oM%252C_&vet=1&usg=AI4_-kQn1ZS8qcz8wpqJ5SAbYI3mivconA&sa=X&ved=2ahUKEwjs-OHh9pHwAhXSpIsKHfgoB5kQ9QF6BAgSEAE#imgrc=Iqrn9zwUMx_LVM"
                    },
                    "category_icon": {
                        "title": "Category_icon",
                        "description": "Category icon",
                        "type": "string",
                        "example": "https://www.google.com/search?q=fruits&sxsrf=ALeKk00am-a2RSceVhR9xhnmtlTf6hyi4A:1619097112058&tbm=isch&source=iu&ictx=1&fir=Iqrn9zwUMx_LVM%252CV1GXApsZb-s1oM%252C_&vet=1&usg=AI4_-kQn1ZS8qcz8wpqJ5SAbYI3mivconA&sa=X&ved=2ahUKEwjs-OHh9pHwAhXSpIsKHfgoB5kQ9QF6BAgSEAE#imgrc=Iqrn9zwUMx_LVM"
                    },
                    "created_at": {
                        "title": "Created_at",
                        "description": "Created time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    },
                    "updated_at": {
                        "title": "Updated_at",
                        "description": "Updated time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    }
                },
                "type": "object"
            },
            "CategoryStoreRequest": {
                "title": "Category post example",
                "description": "Some simple request createad as action",
                "properties": {
                    "price": {
                        "title": "price",
                        "description": "Price of action for storring",
                        "type": "integer",
                        "example": "55"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title for storring",
                        "type": "string",
                        "example": "About action"
                    }
                },
                "type": "object"
            },
            "PhotoShowRequest": {
                "title": "Photo get example",
                "description": "Some simple example",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Unique ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "url": {
                        "title": "url",
                        "description": "Url of the Photo",
                        "type": "string",
                        "example": "Link of photo"
                    },
                    "created_at": {
                        "title": "Created_at",
                        "description": "Created time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    },
                    "updated_at": {
                        "title": "Updated_at",
                        "description": "Updated time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    }
                },
                "type": "object"
            },
            "ProductShowRequest": {
                "title": "Product get example",
                "description": "Some simple example",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Unique ID",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "Name of the product",
                        "type": "integer",
                        "example": "Banana"
                    },
                    "price": {
                        "title": "price",
                        "description": "Price of products",
                        "type": "integer",
                        "example": "60"
                    },
                    "photo": {
                        "title": "photo",
                        "description": "Photo of category",
                        "type": "string",
                        "example": "https://www.google.com/search?q=fruits&sxsrf=ALeKk00am-a2RSceVhR9xhnmtlTf6hyi4A:1619097112058&tbm=isch&source=iu&ictx=1&fir=Iqrn9zwUMx_LVM%252CV1GXApsZb-s1oM%252C_&vet=1&usg=AI4_-kQn1ZS8qcz8wpqJ5SAbYI3mivconA&sa=X&ved=2ahUKEwjs-OHh9pHwAhXSpIsKHfgoB5kQ9QF6BAgSEAE#imgrc=Iqrn9zwUMx_LVM"
                    },
                    "created_at": {
                        "title": "Created_at",
                        "description": "Created time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    },
                    "updated_at": {
                        "title": "Updated_at",
                        "description": "Updated time",
                        "type": "string",
                        "example": "2021-04-22T12:11:09.000000Z"
                    }
                },
                "type": "object"
            },
            "Action": {
                "title": "Action",
                "description": "Action model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price of the new Action",
                        "type": "integer",
                        "example": "60"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the new action",
                        "type": "string",
                        "example": "This is new action's title"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "product_id": {
                        "title": "Product ID",
                        "description": "Product's id of the new action",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Action"
                }
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new category",
                        "type": "string",
                        "example": "Fruits"
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "Slug of the category",
                        "type": "string",
                        "example": "This is new categories slug"
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Photo of the new category",
                        "type": "string",
                        "example": "http://photOfDoolat.png"
                    },
                    "category_icon": {
                        "title": "Category_Icon",
                        "description": "Icon of the new category",
                        "type": "string",
                        "example": "http://photOfDoolat.png"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new product",
                        "type": "string",
                        "example": "Banana"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price of the new product",
                        "type": "integer",
                        "example": "60"
                    },
                    "photo": {
                        "title": "Photo",
                        "description": "Photo of the new product",
                        "type": "string",
                        "example": "http://photOfDoolat.png"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "product_id": {
                        "title": "Product ID",
                        "description": "Product's id of the new action",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "StoreActionRequest": {
                "title": "Store Project request",
                "description": "Store Project request body data",
                "required": [
                    "price,title"
                ],
                "properties": {
                    "price": {
                        "title": "price",
                        "description": "Price of action for storring",
                        "type": "integer",
                        "example": "55"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title for storring",
                        "type": "string",
                        "example": "About action"
                    },
                    "product_id": {
                        "title": "product_id",
                        "description": "Product's id of the new action",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "X-APP-ID": {
                "type": "apiKey",
                "name": "X-APP-ID",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Products",
            "description": "Products list"
        },
        {
            "name": "Actions",
            "description": "Actions list"
        },
        {
            "name": "Categories",
            "description": "Categories list"
        },
        {
            "name": "Orders",
            "description": "Orders list"
        },
        {
            "name": "Banners",
            "description": "Banners list"
        },
        {
            "name": "Photos",
            "description": "Photos list"
        }
    ],
    "security": [
        []
    ]
}